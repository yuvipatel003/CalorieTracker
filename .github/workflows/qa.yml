name: Debug Build

on:
  push:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
        
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set patch version
        if: ${{ env.CurrentDevVersion == null || env.CurrentDevVersion != vars.CURRENT_DEV_VERSION}}
        run: echo "DevVersion=${{vars.CURRENT_DEV_VERSION}}" >> $GITHUB_ENV
             echo "PatchVersion=null" >> $GITHUB_ENV
        
      - name: Set patch version
        if: ${{ env.Version == null }}
        run: echo "PatchVersion=1" >> $GITHUB_ENV
        
      - name: Get next version
        run: echo "CurrentPatchVersion=${{ env.PatchVersion }}"
             echo "Next version = ${{vars.CURRENT_DEV_VERSION }}${{ env.PatchVersion++ }} "

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: "${{ vars.APP_TAG_NAME }}:${{ steps.version.outputs.version }}"
          context: .
          
#   build:
#     runs-on: ubuntu-latest
#     steps:
#        - name: "${{ vars.APP_NAME }} ${{ vars.CURRENT_DEV_VERSION }}"
#          run: echo "${{ vars.APP_NAME }} ${{ vars.CURRENT_DEV_VERSION }}"
        
  lint:
    runs-on: ubuntu-latest
    steps:
            # Just Echo Message to run avoid Git Actions
      - name: Instrumented Test Started
        run: echo Instrumented Test Started

      - name: Checkout branch code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
         name: lint_report.html
         path: app/build/reports/lint-results-debug.html

#   unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#           # Just Echo Message to run avoid Git Actions
#       - name: Instrumented Test Started
#         run: echo Instrumented Test Started

#       - name: Checkout branch code
#         uses: actions/checkout@v3

#       - name: Run Tests
#         run: ./gradlew test

#       - name: Upload test report
#         uses: actions/upload-artifact@v3
#         with:
#          name: unit_test_report.html
#          path: app/build/reports/tests/testDebugUnitTest/

#   instrumented-test:
#     needs: [unit-test]
#     runs-on: macos-latest
#     steps:
#      #      # Just Echo Message to run avoid Git Actions
#      #      - name: Instrumented Test Started
#      #        run: echo Instrumented Test Started

#      - name: Checkout branch code
#        uses: actions/checkout@v3

#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11

#      - name: Run intrumented tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck

#      - name: Upload instrumented test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: instrumented_test_report.html
#          path: app/build/reports/androidTests/connected/


  # Sonar Qube Code Analysis
#  sonarcloud-code-analysis:
#    needs: [instrumented-test]
#    runs-on: ubuntu-latest
#    steps:
#      #      # Just Echo Message to run avoid Git Actions
#      #      - name: SonarCloud Check Started
#      #        run: echo SonarCloud Check Started

#      - name: Checkout branch code
#        uses: actions/checkout@v3

#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11

#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  package-debug-apk:
    needs: [lint]
    name: Generate Debug APK
    runs-on: ubuntu-latest
    steps:

      - name: Checkout branch code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v2
        with:
          name: "${{ vars.APP_NAME }} ${{ vars.CURRENT_DEV_VERSION }}.${{ env.Version++ }} "
          path: app/build/outputs/apk/debug/app-debug.apk
